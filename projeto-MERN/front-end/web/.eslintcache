[{"D:\\Matheus_Galhani\\Dev\\Estudos\\React-Estudos\\projeto-MERN\\front-end\\web\\src\\index.js":"1","D:\\Matheus_Galhani\\Dev\\Estudos\\React-Estudos\\projeto-MERN\\front-end\\web\\src\\views\\Home\\index.js":"2","D:\\Matheus_Galhani\\Dev\\Estudos\\React-Estudos\\projeto-MERN\\front-end\\web\\src\\components\\Header\\index.js":"3","D:\\Matheus_Galhani\\Dev\\Estudos\\React-Estudos\\projeto-MERN\\front-end\\web\\src\\views\\Home\\styles.js":"4","D:\\Matheus_Galhani\\Dev\\Estudos\\React-Estudos\\projeto-MERN\\front-end\\web\\src\\components\\Header\\styles.js":"5","D:\\Matheus_Galhani\\Dev\\Estudos\\React-Estudos\\projeto-MERN\\front-end\\web\\src\\components\\Footer\\index.js":"6","D:\\Matheus_Galhani\\Dev\\Estudos\\React-Estudos\\projeto-MERN\\front-end\\web\\src\\components\\Footer\\styles.js":"7","D:\\Matheus_Galhani\\Dev\\Estudos\\React-Estudos\\projeto-MERN\\front-end\\web\\src\\components\\FilterCard\\index.js":"8","D:\\Matheus_Galhani\\Dev\\Estudos\\React-Estudos\\projeto-MERN\\front-end\\web\\src\\components\\FilterCard\\styles.js":"9","D:\\Matheus_Galhani\\Dev\\Estudos\\React-Estudos\\projeto-MERN\\front-end\\web\\src\\components\\TaskCard\\index.js":"10","D:\\Matheus_Galhani\\Dev\\Estudos\\React-Estudos\\projeto-MERN\\front-end\\web\\src\\components\\TaskCard\\styles.js":"11","D:\\Matheus_Galhani\\Dev\\Estudos\\React-Estudos\\projeto-MERN\\front-end\\web\\src\\services\\api.js":"12","D:\\Matheus_Galhani\\Dev\\Estudos\\React-Estudos\\projeto-MERN\\front-end\\web\\src\\utils\\typeIcons.js":"13","D:\\Matheus_Galhani\\Dev\\Estudos\\React-Estudos\\projeto-MERN\\front-end\\web\\src\\views\\Task\\index.js":"14","D:\\Matheus_Galhani\\Dev\\Estudos\\React-Estudos\\projeto-MERN\\front-end\\web\\src\\views\\Task\\styles.js":"15","D:\\Matheus_Galhani\\Dev\\Estudos\\React-Estudos\\projeto-MERN\\front-end\\web\\src\\routes\\index.js":"16","D:\\Matheus_Galhani\\Dev\\Estudos\\React-Estudos\\projeto-MERN\\front-end\\web\\src\\views\\QrCode\\index.js":"17","D:\\Matheus_Galhani\\Dev\\Estudos\\React-Estudos\\projeto-MERN\\front-end\\web\\src\\views\\QrCode\\styles.js":"18","D:\\Matheus_Galhani\\Dev\\Estudos\\React-Estudos\\projeto-MERN\\front-end\\web\\src\\utils\\isConnected.js":"19"},{"size":218,"mtime":1610123650826,"results":"20","hashOfConfig":"21"},{"size":3252,"mtime":1610382396486,"results":"22","hashOfConfig":"21"},{"size":2100,"mtime":1610382387690,"results":"23","hashOfConfig":"21"},{"size":915,"mtime":1610316121842,"results":"24","hashOfConfig":"21"},{"size":1511,"mtime":1610381731513,"results":"25","hashOfConfig":"21"},{"size":319,"mtime":1609956655154,"results":"26","hashOfConfig":"21"},{"size":343,"mtime":1610034838736,"results":"27","hashOfConfig":"21"},{"size":438,"mtime":1610030019617,"results":"28","hashOfConfig":"21"},{"size":600,"mtime":1610029961253,"results":"29","hashOfConfig":"21"},{"size":891,"mtime":1610316427492,"results":"30","hashOfConfig":"21"},{"size":858,"mtime":1610316429846,"results":"31","hashOfConfig":"21"},{"size":122,"mtime":1610035985463,"results":"32","hashOfConfig":"21"},{"size":595,"mtime":1610037515071,"results":"33","hashOfConfig":"21"},{"size":7440,"mtime":1610382409635,"results":"34","hashOfConfig":"21"},{"size":2339,"mtime":1610123217028,"results":"35","hashOfConfig":"21"},{"size":611,"mtime":1610378622835,"results":"36","hashOfConfig":"21"},{"size":1806,"mtime":1610382627699,"results":"37","hashOfConfig":"21"},{"size":1248,"mtime":1610380481121,"results":"38","hashOfConfig":"21"},{"size":92,"mtime":1610381405464,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"1r0zrhp",{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"42"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"42"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"42"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"D:\\Matheus_Galhani\\Dev\\Estudos\\React-Estudos\\projeto-MERN\\front-end\\web\\src\\index.js",[],["82","83"],"D:\\Matheus_Galhani\\Dev\\Estudos\\React-Estudos\\projeto-MERN\\front-end\\web\\src\\views\\Home\\index.js",["84"],"import React, { useState, useEffect } from 'react';\r\nimport { Link, Redirect} from 'react-router-dom';\r\n\r\nimport * as Styled from './styles';\r\nimport api from '../../services/api'\r\n\r\nimport Header from '../../components/Header';\r\nimport Footer from '../../components/Footer';\r\nimport FilterCard from '../../components/FilterCard';\r\nimport TaskCard from '../../components/TaskCard';\r\nimport isConnected from '../../utils/isConnected';\r\n\r\n\r\nfunction Home() {\r\n    const [filterActived, setFilterActived] = useState('all');\r\n    const [tasks, setTasks] = useState([]);\r\n    const [redirect, setRedirect] = useState(false);\r\n\r\n    async function loadTasks() {\r\n        await api.get(`/task/filter/${filterActived}/`).then(response => {\r\n            setTasks(response.data);\r\n        });\r\n    }\r\n\r\n    function notification() {\r\n        setFilterActived('late')\r\n    }\r\n\r\n    useEffect(() => {\r\n        loadTasks();\r\n        if (!isConnected) setRedirect(true)\r\n    }, [filterActived]);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            { redirect ? <Redirect to=\"/qrcode\" /> : null}\r\n            <Styled.Container>\r\n                <Header clickNotification={notification} />\r\n                <Styled.FilterArea>\r\n                    <button type=\"button\" onClick={() => setFilterActived(\"all\")}>\r\n                        <FilterCard title=\"Todos\" actived={filterActived === 'all'} />\r\n                    </button>\r\n                    <button type=\"button\" onClick={() => setFilterActived(\"today\")}>\r\n                        <FilterCard title=\"Hoje\" actived={filterActived === 'today'} />\r\n                    </button>\r\n                    <button type=\"button\" onClick={() => setFilterActived(\"week\")} >\r\n                        <FilterCard title=\"Semana\" actived={filterActived === 'week'} />\r\n                    </button>\r\n                    <button type=\"button\" onClick={() => setFilterActived(\"month\")} >\r\n                        <FilterCard title=\"MÃªs\" actived={filterActived === 'month'} />\r\n                    </button>\r\n                    <button type=\"button\" onClick={() => setFilterActived(\"year\")} >\r\n                        <FilterCard title=\"Ano\" actived={filterActived === 'year'} />\r\n                    </button>\r\n\r\n                </Styled.FilterArea>\r\n\r\n                <Styled.Title>\r\n                    <h3>TAREFAS {filterActived === 'late' ? 'ATRASADAS' : null}</h3>\r\n                </Styled.Title>\r\n\r\n                <Styled.Content>\r\n                    {\r\n                        tasks.map(taskElement => (\r\n                            <Link to={`/task/${taskElement._id}`} key={`redirect-${taskElement._id}`}>\r\n                                <TaskCard key={taskElement._id} \r\n                                      title={taskElement.title} \r\n                                      type={taskElement.type} \r\n                                      when={taskElement.when}\r\n                                      done={taskElement.done}/>\r\n                            </Link>\r\n                            \r\n                        ))\r\n                    }\r\n                </Styled.Content>\r\n\r\n                <Footer />\r\n            </Styled.Container>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default Home;  ","D:\\Matheus_Galhani\\Dev\\Estudos\\React-Estudos\\projeto-MERN\\front-end\\web\\src\\components\\Header\\index.js",[],"D:\\Matheus_Galhani\\Dev\\Estudos\\React-Estudos\\projeto-MERN\\front-end\\web\\src\\views\\Home\\styles.js",[],"D:\\Matheus_Galhani\\Dev\\Estudos\\React-Estudos\\projeto-MERN\\front-end\\web\\src\\components\\Header\\styles.js",[],"D:\\Matheus_Galhani\\Dev\\Estudos\\React-Estudos\\projeto-MERN\\front-end\\web\\src\\components\\Footer\\index.js",[],"D:\\Matheus_Galhani\\Dev\\Estudos\\React-Estudos\\projeto-MERN\\front-end\\web\\src\\components\\Footer\\styles.js",[],"D:\\Matheus_Galhani\\Dev\\Estudos\\React-Estudos\\projeto-MERN\\front-end\\web\\src\\components\\FilterCard\\index.js",[],"D:\\Matheus_Galhani\\Dev\\Estudos\\React-Estudos\\projeto-MERN\\front-end\\web\\src\\components\\FilterCard\\styles.js",[],"D:\\Matheus_Galhani\\Dev\\Estudos\\React-Estudos\\projeto-MERN\\front-end\\web\\src\\components\\TaskCard\\index.js",["85","86"],"import React, { useMemo } from 'react';\r\n\r\nimport { format } from 'date-fns';\r\nimport * as Styled from './styles';\r\nimport typeIcons from '../../utils/typeIcons';\r\n\r\n\r\nfunction TaskCard(props) {\r\n    const date = useMemo(() => format(new Date(props.when), 'dd/MM/yyyy'));\r\n    const hour = useMemo(() => format(new Date(props.when), 'HH:mm'));\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Styled.Container done={props.done}>\r\n                <Styled.TopCard>\r\n                    <img src={typeIcons[props.type]} alt=\"Icone da Tarefa\" />\r\n                    <h3>{props.title}</h3>\r\n                </Styled.TopCard>\r\n\r\n                <Styled.BottomCard>\r\n                    <strong>{date}</strong>\r\n                    <span>{hour}</span>\r\n                </Styled.BottomCard>\r\n            </Styled.Container>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default TaskCard;  ","D:\\Matheus_Galhani\\Dev\\Estudos\\React-Estudos\\projeto-MERN\\front-end\\web\\src\\components\\TaskCard\\styles.js",[],"D:\\Matheus_Galhani\\Dev\\Estudos\\React-Estudos\\projeto-MERN\\front-end\\web\\src\\services\\api.js",[],"D:\\Matheus_Galhani\\Dev\\Estudos\\React-Estudos\\projeto-MERN\\front-end\\web\\src\\utils\\typeIcons.js",[],"D:\\Matheus_Galhani\\Dev\\Estudos\\React-Estudos\\projeto-MERN\\front-end\\web\\src\\views\\Task\\index.js",["87"],"import React, { useState, useEffect } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nimport * as Styled from './styles';\r\nimport api from '../../services/api';\r\n\r\nimport { format } from 'date-fns'\r\n\r\nimport Header from '../../components/Header';\r\nimport Footer from '../../components/Footer';\r\nimport TypeIcons from '../../utils/typeIcons';\r\nimport isConnected from '../../utils/isConnected';\r\n\r\n\r\nfunction Task(props) {\r\n    const [type, setType] = useState(1);   \r\n    const [lateTask, setLateTasks] = useState(0);\r\n    const [title, setTitle] = useState('');\r\n    const [description, setDescription] = useState('');\r\n    const [done, setDone] = useState(false);\r\n    const [date, setDate] = useState('');\r\n    const [hour, setHour] = useState('');\r\n    const [macaddress, setMacaddress] = useState('');\r\n    const [redirect, setRedirect] = useState(false);\r\n    const [redirectQr, setRedirectQr]  = useState(false);\r\n\r\n    \r\n    async function lateVerify() {\r\n        await api.get(`/task/filter/late/${macaddress}`).then(response => {\r\n            setLateTasks(response.data.length);\r\n        });\r\n    }\r\n\r\n    async function loadComponentsByID() {\r\n        await api.get(`/task/${props.match.params._id}`).then(response => {\r\n            setTitle(response.data.title);\r\n            setMacaddress(response.data.macaddress);\r\n            setType(response.data.type);\r\n            setDescription(response.data.description);\r\n            setDone(response.data.done);\r\n            setDate(format(new Date(response.data.when), 'yyyy-MM-dd'));\r\n            setHour(format(new Date(response.data.when), 'HH:mm'));\r\n        });\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!isConnected) {\r\n            setRedirectQr(true);\r\n        } else {\r\n            setMacaddress(isConnected);\r\n            lateVerify();\r\n            if (props.match.params._id) loadComponentsByID();\r\n        }\r\n    }, []);\r\n\r\n    const validateFields = () => {\r\n        const requiredFields = {\r\n            title() {\r\n                if (!title) {\r\n                    return \"VocÃª precisa informar o titulo da tarefa\"\r\n                }\r\n            },\r\n            description() {\r\n                if (!description) {\r\n                    return \"VocÃª precisa informar a descriÃ§Ã£o da tarefa\"\r\n                }\r\n            },\r\n            date() {\r\n                if (!date) {\r\n                    return \"VocÃª precisa informar a data da tarefa\"\r\n                }\r\n            },\r\n            hour() {\r\n                if (!hour) {\r\n                    return \"VocÃª precisa informar a hora da tarefa\"\r\n                }\r\n            }\r\n        }\r\n\r\n        const errors = [];\r\n    \r\n        Object.entries(requiredFields).forEach(([key, methodValidate]) => {\r\n            const result = methodValidate();\r\n            if (result !== undefined) errors.push(result);\r\n        });\r\n        \r\n        if(errors.length > 0){\r\n            return errors[0]\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    async function saveForm() {     \r\n        const messageForUser = validateFields();\r\n        if (messageForUser) {\r\n            alert(messageForUser);\r\n        } else {\r\n            if (props.match.params._id) {\r\n                await api.put(`/task/${props.match.params._id}`, {\r\n                    macaddress,\r\n                    type,\r\n                    title,\r\n                    description,\r\n                    \"when\": `${date}T${hour}:00.000`,\r\n                    done\r\n                }).then(response => {\r\n                    setRedirect(true);\r\n                }).catch(error => {\r\n                    console.log(error);\r\n                });\r\n            } else {\r\n                await api.post('/task', {\r\n                    macaddress,\r\n                    type,\r\n                    title,\r\n                    description,\r\n                    \"when\": `${date}T${hour}:00.000`,\r\n                    done\r\n                }).then(response => {\r\n                    setRedirect(true);\r\n                }).catch(error => {\r\n                    console.log(error);\r\n                });\r\n            };\r\n        }\r\n    }\r\n\r\n    async function deleteItemByID() {\r\n        const res = window.confirm(\"Deseja realmente remover a tarefa? \")\r\n        if (props.match.params._id && res) {\r\n            await api.delete(`/task/${props.match.params._id}`).then(response => {\r\n                setRedirect(true);\r\n            }).catch(error => {\r\n                console.log(error);\r\n            });\r\n        }\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Styled.Container>\r\n                { redirect ? <Redirect to=\"/\"/> : null }\r\n                { redirectQr ? <Redirect to=\"/qrcode\" /> : null}\r\n\r\n                <Header lateCount={lateTask} />\r\n\r\n                <Styled.Form>\r\n                    <Styled.TypeIcons>\r\n                        {\r\n                            TypeIcons.map((icon, index) => (\r\n                                index > 0 && (\r\n                                    <button key={index} type=\"submit\" onClick={() => setType(index)}>\r\n                                        <img src={icon} className={(type && type !== index) ? 'inative' : null}\r\n                                             alt=\"Tipo da tarefa\" />\r\n                                    </button>\r\n                                )\r\n                            ))\r\n                        }\r\n                    </Styled.TypeIcons>\r\n                    \r\n                    <Styled.InputField>\r\n                        <span>TÃ­tulo</span>\r\n                        <input type=\"text\" placeholder=\"TÃ­tulo da tarefa...\"\r\n                               value={title} onChange={(e) => setTitle(e.target.value)} />\r\n                    </Styled.InputField>\r\n\r\n                    <Styled.TextAreaField>\r\n                        <span>DesccriÃ§Ã£o</span>\r\n                        <textarea rows={5} placeholder=\"Detalhes da tarefa ...\"\r\n                                  value={description} onChange={(e) => setDescription(e.target.value)} />\r\n                    </Styled.TextAreaField>\r\n\r\n                    <Styled.InputField>\r\n                        <span>Data</span>\r\n                        <input type=\"date\" value={date} onChange={(e) => setDate(e.target.value)}/>\r\n                    </Styled.InputField>\r\n\r\n                    <Styled.InputField>\r\n                        <span>Hora</span>\r\n                        <input type=\"time\" value={hour} onChange={(e) => setHour(e.target.value)}/>\r\n                    </Styled.InputField>\r\n\r\n                    <Styled.Options>\r\n                        <div>\r\n                            <input type=\"checkbox\" checked={done} onChange={(e) => setDone(e.target.checked)}/>\r\n                            <span>CONCLUÃDO</span>\r\n                        </div>\r\n                        {\r\n                            props.match.params._id ?\r\n                            <button type=\"button\" onClick={deleteItemByID}>EXCLUIR</button>\r\n                            : null\r\n                        }\r\n                    </Styled.Options>\r\n\r\n                    <Styled.Save>\r\n                        <button type=\"button\" onClick={saveForm}>SALVAR</button>\r\n                    </Styled.Save>\r\n\r\n                </Styled.Form>\r\n\r\n                <Footer />\r\n            </Styled.Container>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default Task;  ","D:\\Matheus_Galhani\\Dev\\Estudos\\React-Estudos\\projeto-MERN\\front-end\\web\\src\\views\\Task\\styles.js",[],"D:\\Matheus_Galhani\\Dev\\Estudos\\React-Estudos\\projeto-MERN\\front-end\\web\\src\\routes\\index.js",[],"D:\\Matheus_Galhani\\Dev\\Estudos\\React-Estudos\\projeto-MERN\\front-end\\web\\src\\views\\QrCode\\index.js",[],"D:\\Matheus_Galhani\\Dev\\Estudos\\React-Estudos\\projeto-MERN\\front-end\\web\\src\\views\\QrCode\\styles.js",[],"D:\\Matheus_Galhani\\Dev\\Estudos\\React-Estudos\\projeto-MERN\\front-end\\web\\src\\utils\\isConnected.js",[],{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","severity":1,"message":"93","line":32,"column":8,"nodeType":"94","endLine":32,"endColumn":23,"suggestions":"95"},{"ruleId":"92","severity":1,"message":"96","line":9,"column":18,"nodeType":"97","endLine":9,"endColumn":25},{"ruleId":"92","severity":1,"message":"96","line":10,"column":18,"nodeType":"97","endLine":10,"endColumn":25},{"ruleId":"92","severity":1,"message":"98","line":54,"column":8,"nodeType":"94","endLine":54,"endColumn":10,"suggestions":"99"},"no-native-reassign",["100"],"no-negated-in-lhs",["101"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loadTasks'. Either include it or remove the dependency array.","ArrayExpression",["102"],"React Hook useMemo does nothing when called with only one argument. Did you forget to pass an array of dependencies?","Identifier","React Hook useEffect has missing dependencies: 'lateVerify', 'loadComponentsByID', and 'props.match.params._id'. Either include them or remove the dependency array.",["103"],"no-global-assign","no-unsafe-negation",{"desc":"104","fix":"105"},{"desc":"106","fix":"107"},"Update the dependencies array to be: [filterActived, loadTasks]",{"range":"108","text":"109"},"Update the dependencies array to be: [lateVerify, loadComponentsByID, props.match.params._id]",{"range":"110","text":"111"},[964,979],"[filterActived, loadTasks]",[1903,1905],"[lateVerify, loadComponentsByID, props.match.params._id]"]